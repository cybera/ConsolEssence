{"1":{"id":"1","parent":"#","text":"Test","icon":"","li_attr":{},"a_attr":{},"type":"code","script":"ls\nls -l\n#sudo apt update\n\na={{c.aaaa}}\necho $a done\n","sort":2,"description":{"ops":[{"insert":"this is a "},{"attributes":{"bold":true},"insert":"test ..."},{"insert":"\n"}]},"found":true,"variables":{"hhhb":{"private":false,"ask":false,"type":"Text","value":"kkkb","idn":"0"},"aaaa":{"private":true,"ask":true,"type":"Text","value":"bbbb","idn":"1"}}},"8f115abd-a0f1-4bd0-951e-d36d69229f31":{"text":"Test 2","parent":"1","script":"#test\nls -l\nwhoami\ncat  treeData.json","id":"8f115abd-a0f1-4bd0-951e-d36d69229f31","type":"code","description":{"ops":[{"attributes":{"color":"#dcdcaa"},"insert":"$"},{"insert":"("},{"attributes":{"color":"#ce9178"},"insert":"\"#console\""},{"insert":")."},{"attributes":{"color":"#dcdcaa"},"insert":"append"},{"insert":"("},{"attributes":{"color":"#ce9178"},"insert":"\" \""},{"insert":") Test 2\n"}]},"sort":0,"variables":{"test":{"private":false,"ask":false,"type":"Text","value":"jlkhlkhlkghgfjhfjfjhfggfh","idn":"0"}},"found":true},"12b9b55c-8083-4733-9563-f416e9f981a6":{"text":"Openstack","parent":"#","script":"","description":{"ops":[{"attributes":{"link":"https://www.openstack.org/"},"insert":"https://www.openstack.org/"},{"insert":"\n"},{"attributes":{"bold":true},"insert":"The Most Widely Deployed Open Source Cloud Software in the World"},{"attributes":{"header":2},"insert":"\n"},{"insert":"Deployed by thousands. Proven production at scale. OpenStack is a set of software components that provide common services for cloud infrastructure.\n\n"},{"attributes":{"bold":true},"insert":"WHAT IS OPENSTACK?"},{"attributes":{"header":3},"insert":"\n"},{"insert":"OpenStack is a cloud operating system that controls large pools of compute, storage, and networking resources throughout a datacenter, all managed and provisioned through APIs with common authentication mechanisms.\nA dashboard is also available, giving administrators control while empowering their users to provision resources through a web interface.\nBeyond standard infrastructure-as-a-service functionality, additional components provide orchestration, fault management and service management amongst other services to ensure high availability of user applications.\n"}]},"id":"12b9b55c-8083-4733-9563-f416e9f981a6","type":"code","sort":1},"9e80bab9-50c1-44e6-bcec-f1d78ef80f1a":{"text":"Install Openstack Client","parent":"12b9b55c-8083-4733-9563-f416e9f981a6","script":"sudo apt -y install python3-openstackclient","description":{"ops":[{"attributes":{"bold":true},"insert":"Installs openstackclient"},{"insert":"\n\nOpenStackClient (aka OSC) is a command-line client for OpenStack that brings the command set for Compute, Identity, Image, Network, Object Store and Block Storage APIs together in a single shell with a uniform command structure.\nThe primary goal is to provide a unified shell command structure and a common language to describe operations in OpenStack.\n"}]},"id":"9e80bab9-50c1-44e6-bcec-f1d78ef80f1a","type":"code","sort":0},"6f4987e7-6eaa-495b-be96-964645c23612":{"text":"Containers","parent":"#","script":"","description":{"ops":[{"attributes":{"link":"https://en.wikipedia.org/wiki/Containerization_(computing)"},"insert":"https://en.wikipedia.org/wiki/Containerization_(computing)"},{"insert":"\n\nIn software engineering, containerization is operating system-level virtualization or application-level virtualization over multiple network resources so that software applications can run in isolated user spaces called containers in any cloud or non-cloud environment, regardless of type or vendor.\n"}]},"id":"6f4987e7-6eaa-495b-be96-964645c23612","type":"code","sort":0,"variables":{}},"0eeabd9e-1b19-41b5-bbc2-327a95461f81":{"text":"Docker","parent":"6f4987e7-6eaa-495b-be96-964645c23612","script":"","description":{"ops":[{"attributes":{"link":"https://en.wikipedia.org/wiki/Docker_(software)"},"insert":"https://en.wikipedia.org/wiki/Docker_(software)"},{"insert":"\n\n"},{"attributes":{"bold":true},"insert":"Docker"},{"insert":" is a set of "},{"attributes":{"color":"#3366cc","link":"https://en.wikipedia.org/wiki/Platform_as_a_service"},"insert":"platform as a service"},{"insert":" (PaaS) products that use "},{"attributes":{"color":"#3366cc","link":"https://en.wikipedia.org/wiki/OS-level_virtualization"},"insert":"OS-level virtualization"},{"insert":" to deliver software in packages called "},{"attributes":{"italic":true,"color":"#3366cc","link":"https://en.wikipedia.org/wiki/Container_(virtualization)"},"insert":"containers"},{"insert":". The service has both free and premium tiers. The software that hosts the containers is called "},{"attributes":{"bold":true},"insert":"Docker Engine"},{"insert":". It was first released in 2013 and is developed by "},{"attributes":{"color":"#3366cc","link":"https://en.wikipedia.org/wiki/Docker,_Inc."},"insert":"Docker, Inc."},{"insert":"\nDocker is a tool that is used to automate the deployment of applications in lightweight containers so that applications can work efficiently in different environments in isolation.\n\n"},{"insert":{"image":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/09/Docker-linux-interfaces.svg/220px-Docker-linux-interfaces.svg.png"}},{"insert":"\n"},{"attributes":{"background":"#f8f9fa","color":"#202122"},"insert":"Docker can use different interfaces to access virtualization features of the Linux kernel."},{"insert":"\n"}]},"id":"0eeabd9e-1b19-41b5-bbc2-327a95461f81","type":"code","found":true},"ff6eb569-815f-4ea3-a6d9-a29801b13f1a":{"text":"Install Docker","parent":"0eeabd9e-1b19-41b5-bbc2-327a95461f81","script":"sudo apt-get update\n\nsudo apt-get install ca-certificates curl gnupg lsb-release\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\necho  \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\nsudo apt-get update\n\nsudo apt-get -y install docker-ce docker-ce-cli containerd.io","description":{"ops":[{"insert":"Install Docker on Ubuntu 20.04 LTS\n"}]},"id":"ff6eb569-815f-4ea3-a6d9-a29801b13f1a","type":"code","variables":{},"found":true,"sort":0},"b1e874e9-a642-4920-8624-355118328fb1":{"text":"Utilities","parent":"#","script":"","description":{"ops":[{"insert":"\n"}]},"id":"b1e874e9-a642-4920-8624-355118328fb1","type":"code"},"96dfb760-54b4-4bf8-a095-2dd7fbe84f51":{"text":"Top","parent":"b1e874e9-a642-4920-8624-355118328fb1","script":"top","description":{"ops":[{"insert":"Process viewer, find the CPU-intensive programs currently running.  Control-c to stop.\n"}]},"id":"96dfb760-54b4-4bf8-a095-2dd7fbe84f51","type":"code","sort":0},"73c07432-ebff-4fc1-812e-636958eb54d3":{"text":"Tail syslog","parent":"b1e874e9-a642-4920-8624-355118328fb1","script":"tail -500 /var/log/syslog","description":{"ops":[{"insert":"See last 500 lines of the syslog\n"}]},"id":"73c07432-ebff-4fc1-812e-636958eb54d3","type":"code","sort":2},"00c9775a-aa1e-4f98-a839-061ba4822516":{"text":"apt update","parent":"b1e874e9-a642-4920-8624-355118328fb1","script":"sudo apt update","description":{"ops":[{"insert":"Ubuntu features a comprehensive package management system for installing, upgrading, configuring, and removing software. In addition to providing access to an organized base of over 60,000 software packages for your Ubuntu computer, the package management facilities also feature dependency resolution capabilities and software update checking.\n\nThe APT package index is essentially a database of available packages from the repositories defined in the "},{"attributes":{"color":"inherit","background":"rgba(0, 0, 0, 0.03)","code":true},"insert":"/etc/apt/sources.list"},{"insert":" file and in the "},{"attributes":{"color":"inherit","background":"rgba(0, 0, 0, 0.03)","code":true},"insert":"/etc/apt/sources.list.d"},{"insert":" directory. To update the local package index with the latest changes made in the repositories, run the following:\n"}]},"id":"00c9775a-aa1e-4f98-a839-061ba4822516","type":"code","sort":1,"found":true,"variables":{}},"ea841508-edb1-4fd7-aca1-46fbb21a97a3":{"parent":"1","text":"Test 22","hist":[{"username":"admin","ds":"2023-09-21T20:35:33.383Z","fromId":"8f115abd-a0f1-4bd0-951e-d36d69229f31"}],"sort":1,"id":"ea841508-edb1-4fd7-aca1-46fbb21a97a3","type":"code","script":"","description":{"ops":[{"insert":"mn,n,\n"}]},"variables":{"test":{"private":false,"ask":false,"type":"Text","value":"bbbmn,"},"test2":{"private":true,"ask":false,"type":"Text","value":"mnbfb,msnbd"}},"found":true},"032aea7f-5e3d-44a6-a6ba-5269bdf246b5":{"parent":"8f115abd-a0f1-4bd0-951e-d36d69229f31","text":"Test 2","hist":[{"username":"admin","ds":"2023-09-23T18:01:10.017Z","fromId":"ea841508-edb1-4fd7-aca1-46fbb21a97a3"}],"variables":{},"sort":0,"id":"032aea7f-5e3d-44a6-a6ba-5269bdf246b5","type":"code"},"7585d6f5-0724-414f-a31d-c921cb11990e":{"parent":"032aea7f-5e3d-44a6-a6ba-5269bdf246b5","text":"Test 22","hist":[{"username":"admin","ds":"2023-09-23T18:12:03.409Z","fromId":"ea841508-edb1-4fd7-aca1-46fbb21a97a3"}],"variables":{"test":{"private":false,"ask":false,"type":"Text","value":"bbbmn,","idn":"0"},"test2":{"private":false,"ask":false,"type":"Color","value":"#242eb2","idn":"1"}},"script":"","sort":0,"id":"7585d6f5-0724-414f-a31d-c921cb11990e","type":"code","description":{"ops":[{"insert":"\n"}]},"found":true},"c0477757-a2fa-4765-bf64-e0db8b5d3301":{"text":"Hello World Test","parent":"ff6eb569-815f-4ea3-a6d9-a29801b13f1a","script":"sudo docker run hello-world","description":{"ops":[{"insert":"This will run docker Hello World to prove install \n"}]},"id":"c0477757-a2fa-4765-bf64-e0db8b5d3301","type":"code","variables":{}},"36986302-75fc-49cc-b9dd-9db8d13a96f6":{"text":"Create Docker group and add user","parent":"ff6eb569-815f-4ea3-a6d9-a29801b13f1a","script":"# Create the docker group.\nsudo groupadd docker\n\n# Add your user to the docker group.\nsudo usermod -aG docker ${USER}\n\n# You would need to log out and log back in so that your group membership is re-evaluated or type the following command:\n# Verify that you can run docker commands without sudo.\nsudo su -c 'docker run hello-world' - ${USER}","description":{"ops":[{"insert":"Create Docker group and add current user (ubuntu) so that you do not need to run Docker as root. Run this as the user who has sudo privilege.\n"}]},"id":"36986302-75fc-49cc-b9dd-9db8d13a96f6","type":"code","variables":{}},"d6ade05b-b6e3-414f-8fa4-29b14a10e3ff":{"text":"Install Kubernetes on Ubuntu 20.04","parent":"0eeabd9e-1b19-41b5-bbc2-327a95461f81","script":"# ~~~~~ Step 1: Update the system ~~~~~\nsudo apt update\n\n# ~~~~~ Step 2: Install kubeadm, kubelet, and kubectl ~~~~~\nsudo apt-get install -y apt-transport-https ca-certificates curl\n\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\n\nsudo touch /etc/apt/sources.list.d/kubernetes.list\nsudo chown ubuntu:ubuntu /etc/apt/sources.list.d/kubernetes.list\nsudo echo 'deb https://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list\n\nsudo apt-get update\n\nsudo apt-get install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\n\n# ~~~~~ Step 2b ~~~~~\n# https://serverfault.com/questions/1124015/kubeadm-is-showing-error-cri\nsudo rm /etc/containerd/config.toml\nsudo systemctl restart containerd\n\n# ~~~~~ Step 2c: turn off swap ~~~~~\nsudo sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\nsudo swapoff -a\n\n# ~~~~~ Step 3: Initialize Kubernetes. Note down the kubeadm join command that appears at the end of the output. You will need it to join worker nodes to the cluster. ~~~~~\nsudo kubeadm init --pod-network-cidr=192.168.0.0/16\n\n# ~~~~~ Step 4: Configure kubectl ~~~~~\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n# ~~~~~ Step 5: Install a Pod network add-on ~~~~~\nkubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\n\n# ~~~~~ Step 6: Join worker nodes (Optional) ~~~~~\n# ~~~~~ If you want to add worker nodes to the Kubernetes cluster, you can do so by running the kubeadm join command that you noted down in Step 3 on each worker node. ~~~~~\n\n# ~~~~~ Step 7: Verify the installation. You should see the master node and any worker nodes that you added. ~~~~~\nkubectl get nodes\n","description":{"ops":[{"insert":"Kubernetes is a popular open-source container orchestration system that automates deployment, scaling, and management of containerized applications. It is widely used in the industry to manage and deploy cloud-native applications.\n\nPrerequisites:\nA server running Ubuntu 20.04 with at least 2 CPU cores and 4GB of RAM."},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"A non-root user with sudo privileges."},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Docker installed on the server."},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"\nIf you want to add worker nodes to the Kubernetes cluster, you can do so by running the kubeadm join command, that you need to record after Step 3, on each worker node.\n"},{"attributes":{"link":"https://www.learnitguide.net/2023/04/how-to-install-kubernetes-on-ubuntu-2004.html"},"insert":"https://www.learnitguide.net/2023/04/how-to-install-kubernetes-on-ubuntu-2004.html"},{"insert":"\n"}]},"id":"d6ade05b-b6e3-414f-8fa4-29b14a10e3ff","type":"code","variables":{}},"c389e4eb-5c23-49e5-989e-94f5cffff2f5":{"text":"Turn off swap","parent":"d6ade05b-b6e3-414f-8fa4-29b14a10e3ff","script":"sudo sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\nsudo swapoff -a","description":{"ops":[{"insert":"Part of the official requirements for Kubernetes is to disable swap space completely before attempting to launch Kubernetes.\n"},{"attributes":{"link":"https://linuxconfig.org/how-to-disable-swap-in-linux-for-kubernetes"},"insert":"https://linuxconfig.org/how-to-disable-swap-in-linux-for-kubernetes"},{"insert":"\n"}]},"id":"c389e4eb-5c23-49e5-989e-94f5cffff2f5","type":"code","variables":{}},"af3bb472-45ad-4c98-895b-5a347016b669":{"text":"Deploy Calico pod network to the cluster","parent":"0eeabd9e-1b19-41b5-bbc2-327a95461f81","script":"# Install the Tigera Calico operator and custom resource definitions.\n\nkubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/tigera-operator.yaml\n\n\n# NOTE\n# Due to the large size of the CRD bundle, kubectl apply might exceed request limits. Instead, use kubectl create or kubectl replace.\n\n# Install Calico by creating the necessary custom resource. For more information on configuration options available in this manifest, see the installation reference.\n\nkubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/custom-resources.yaml\n\n\n# NOTE\n# Before creating this manifest, read its contents and make sure its settings are correct for your environment. \n# For example, you may need to change the default IP pool CIDR to match your pod network CIDR.\n\n# Confirm that all of the pods are running with the following command.\n\n# !!!!! WAIT until each pod has the STATUS of Running. Then press any key !!!!\nuntil read -s -n 1 -t 0.01; do kubectl get pods -n calico-system;echo \"\"; sleep 5; done; echo \n\n# NOTE The Tigera operator installs resources in the calico-system namespace. Other install methods may use the kube-system namespace instead.\n\n# Remove the taints on the control plane so that you can schedule pods on it.\n\nkubectl taint nodes --all node-role.kubernetes.io/control-plane-\nkubectl taint nodes --all node-role.kubernetes.io/master-\n\n# It should return the following.\n# node/<your-hostname> untainted\n\n# Confirm that you now have a node in your cluster with the following command.\n\nkubectl get nodes -o wide\n\n# It should return something like the following.\n\n# NAME              STATUS   ROLES    AGE   VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION    CONTAINER-RUNTIME\n# <your-hostname>   Ready    master   52m   v1.12.2   10.128.0.28   <none>        Ubuntu 18.04.1 LTS","description":{"ops":[{"insert":"To communicate between containers running on different nodes in the cluster, we need to install a Pod network add-on. Run the following command to install Calico.\n\n"},{"attributes":{"bold":true,"link":"https://kubernetes.io/docs/concepts/cluster-administration/addons/"},"insert":"https://kubernetes.io/docs/concepts/cluster-administration/addons/"},{"insert":"\n"},{"attributes":{"bold":true,"link":"https://docs.tigera.io/calico/latest/getting-started/kubernetes/quickstart"},"insert":"https://docs.tigera.io/calico/latest/getting-started/kubernetes/quickstart"},{"insert":"\n"}]},"id":"af3bb472-45ad-4c98-895b-5a347016b669","type":"code","variables":{}}}